- block:
    - name: initialize the cluster
      when: inventory_hostname == groups['master_servers'][0]
      shell: sudo kubeadm init --cri-socket={{containerd_socket}} --control-plane-endpoint "{{cp_endpoint}}" --apiserver-bind-port 8443 --upload-certs --apiserver-advertise-address {{MASTER01_IP}} --pod-network-cidr {{pod_cidr}} --kubernetes-version={{k8s_version}}
      register: output

    - name: saving token info
      when: inventory_hostname == groups['master_servers'][0]
      local_action: copy content={{ output.stdout }} dest="/tmp/token"

    - name: generate token master
      local_action: shell sed -n 72,74p /tmp/token > /tmp/mastertoken

    - name: generate token worker
      local_action: shell sed -n 82,84p /tmp/token > /tmp/workertoken

    - name: create kubeconf directory
      become: true
      when: inventory_hostname == groups['master_servers'][0]
      file:
        path: "{{home_directory}}/.kube"
        state: directory
        owner: "{{remote_username}}"
        group: "{{remote_username}}"

    - name: kubeconf actions copy conf
      become: true
      when: inventory_hostname == groups['master_servers'][0]
      copy: 
        src: /etc/kubernetes/admin.conf 
        dest: "{{home_directory}}/.kube/config"
        owner: "{{remote_username}}"
        group: "{{remote_username}}"
        remote_src: yes